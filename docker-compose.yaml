services:
  db:
    image: 'postgres:latest'
    container_name: postgres-library
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_library_data:/var/lib/postgresql/data/
    networks:
      - library-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-library
    ports:
      - "3333:80"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_library_data:/var/lib/pgadmin
    networks:
      - library-network


  web:
    restart: always
    image: library_service:latest
    build: .
    container_name: library-backend
    command: ["/bin/sh", "/usr/backend/commands/run_library_backend.sh"]
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/usr/backend/app
    networks:
      - library-network

volumes:
  postgres_library_data:
    driver: local
  pgadmin_library_data:

networks:
  library-network:
    driver: bridge